/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Application;

import Controller.ActionCheck1;
import Controller.ActionCheck2;
import Controller.ActionCheck3;
import Controller.ActionsOneExercise;
//import Controller.ControlBlue;
import Interface.Canvas;
import Interface.TortueCouleur;
import Interface.TortueG;
import Interface.TortueRapide;
import turtle_project_hci.Exercise;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

/**
 *
 * @author Utilisateur
 */
public class CreateOneExercise extends JPanel{


    private TortueG newTurtle, normalTurtle;
    private TortueCouleur colorTurtle;
    private TortueRapide fastTurtle;
    private JButton draw, undraw, speedUp, slowDown;
    private JButton move, restart, save;
    private JPanel panelArrows, panelLabel, panelMode, panelButtonsRight, panelRight, panelPage;
    private JLabel myEmptyLabel, labelInstruction, labelMode;
    private String result=""; //code generated by the creation of the exercise

    // for the second frame
    private JLabel colorLabel, fastLabel;
    private JPanel panelColor, panelGlobal, panelGlobal2, panelRadioButtons, canv;
    private JComboBox comboSpeed;
    private JRadioButton check1, check2, check3;
    
    private Exercise ex;
    private JPanel panelExercise, panel1, panel2, panel3, panel;
    private JFrame theFrame;
    private JButton turn;
    private JLabel nameEx, instruction;
    private JTextField nameExo, consigne;
    
    
   public CreateOneExercise(JFrame fra){
        ActionsOneExercise aoe = new ActionsOneExercise(this);
        
        theFrame = fra;
        
        ex = new Exercise();
        
        normalTurtle = new TortueG();
        colorTurtle = new TortueCouleur();
        fastTurtle = new TortueRapide();
                
        //exo = new Exercise();
        newTurtle = normalTurtle; //set the newTurtle by default
        
        
        move = new JButton("MOVE");
        move.addActionListener(aoe);
        
        turn = new JButton(new ImageIcon(getClass().getResource("/images/turnRight_opt.png")));
        turn.addActionListener(aoe);
        
        restart = new JButton("Restart");
        restart.addActionListener(aoe);
        
        draw = new JButton("Draw");
        draw.addActionListener(aoe);
        
        undraw = new JButton("Undraw");
        undraw.addActionListener(aoe);
        
        speedUp = new JButton("Speed Up");
        speedUp.addActionListener(aoe);
        speedUp.setEnabled(false);
        
        slowDown = new JButton("Slow Down");
        slowDown.addActionListener(aoe);
        slowDown.setEnabled(false);
        
        save = new JButton("Save");
        save.addActionListener(aoe);
        

                
        labelInstruction = new JLabel("<html>Click on the buttons to create a drawing <br>for your pupils to do.</html>");
        panel1 = new JPanel(); 
        panel1.setLayout(new GridLayout(2,1));
        nameEx= new JLabel("Enter the name of the exercise");
        nameExo = new JTextField();
        
        panel1.add(nameEx, BorderLayout.SOUTH);
        panel1.add(nameExo, BorderLayout.SOUTH);
        
        labelMode = new JLabel("Change Turtle Mode:");

        panel2 =new JPanel();
        panel2.setLayout(new GridLayout(2,3));
        check1 = new JRadioButton("Classical turtle");
        ActionCheck1 ac1 = new ActionCheck1(this, check1, speedUp, slowDown);
        check1.addActionListener(ac1);
        check2 = new JRadioButton("Color turtle");
        ActionCheck2 ac2 = new ActionCheck2(this, check2, speedUp, slowDown);
        check2.addActionListener(ac2);
        check3 = new JRadioButton("Speed turtle");
        ActionCheck3 ac3 = new ActionCheck3(this, check3, speedUp, slowDown);
        check3.addActionListener(ac3);
        ButtonGroup group = new ButtonGroup();
        group.add(check1);
        group.add(check2);
        group.add(check3);
        panel2.add(labelMode);
        panel2.add(new JLabel());
        panel2.add(new JLabel());
        panel2.add(check1);
        panel2.add(check2);
        panel2.add(check3);
        
        panel3=new JPanel();
        panel3.setLayout(new GridLayout(2,1));
        instruction= new JLabel("Enter the instructions of the exercise");
        consigne = new JTextField();

        panel3.add(instruction);
        panel3.add(consigne);
        
        
        
        
        // instanciation of panels
        // label panels
        panelArrows = new JPanel();
        panelArrows.setLayout(new GridLayout(1, 2));
        panelArrows.add(turn);
        panelArrows.add(move);


        
        panelMode = new JPanel();
        panelMode.setLayout(new GridLayout(2,2));
        panelMode.add(new JLabel());
        panelMode.add(new JLabel());
        panelMode.add(restart);
        panelMode.add(save);
        
        panelButtonsRight = new JPanel();
        panelButtonsRight.setLayout(new GridLayout(3,2));
        panelButtonsRight.add(labelInstruction);
        panelButtonsRight.add(new JLabel());
        panelButtonsRight.add(draw);
        panelButtonsRight.add(undraw);
        panelButtonsRight.add(speedUp);
        panelButtonsRight.add(slowDown);
        
        panelRight = new JPanel();
        panelRight.setLayout(new GridLayout(6,1));
        panelRight.add(panel1);
        panelRight.add(panel2);
        panelRight.add(panel3);
        
        panelRight.add(panelButtonsRight);
        panelRight.add(panelArrows);
        panelRight.add(panelMode);
        
        canv = Canvas.getCanvasPanel();
       
        
        this.setLayout(new BorderLayout());
        this.add(canv, BorderLayout.CENTER);
        this.add(panelRight, BorderLayout.EAST);
        

        this.setVisible(true);


   }
    
    
    public void press(ActionEvent ae) {
        if (ae.getSource()==undraw){
            newTurtle.tracer(false);
            result += "U"; //unwrite

        }else if (ae.getSource()==draw){
            newTurtle.tracer(true);
            result+="W"; //write
        }else if (ae.getSource()== move){
            newTurtle.avancer();
            result += "M"; //move

        }else if (ae.getSource()== restart){
            newTurtle.reset();
            result ="";
        }else if (ae.getSource()==speedUp){
            fastTurtle.accelerer();
            result += "A"; //acceler
            
        }else if (ae.getSource()==slowDown){
            fastTurtle.ralentir();
            result += "F"; //freiner
        }else if (ae.getSource()==save){
            ex.setCodeExercise(result);
            //labelInstruction.setText(ex.getCodeExercise());
            //myFrame.dispose();

        }
    }
    

    public Exercise getEx() {
        return ex;
    }

    public TortueG getNewTurtle() {
        return newTurtle;
    }

    public void setNewTurtle(TortueG newTurtle) {
        this.newTurtle = newTurtle;
    }

    public JPanel getPanel() {
        return panelExercise;
    }
    
    public void setPanel(JPanel panel, JFrame frame) {
        frame.setContentPane(panel);
        frame.revalidate();
        frame.pack();
        frame.setSize(1200,800);
        //myFrame.setVisible(true);
    }

    public JFrame getTheFrame() {
        return theFrame;
    }

        /**
     * Getter that return the name of the exercise
     * @return JTextField
     */
        public JTextField getNameExo(){
            return nameExo;
        }
        /**
        * Getter that return the instruction of the exercise
        * @return JTextField
        */
        public JTextField getInstruction(){
            return consigne;
        }

    public void setResult(String result) {
        this.result = result;
    }

    public TortueCouleur getColorTurtle() {
        return colorTurtle;
    }

    public TortueRapide getFastTurtle() {
        return fastTurtle;
    }
    
    
    
    
}
